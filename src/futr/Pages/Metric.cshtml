@page "{id?}"
@model MetricModel
@{
    @if (string.IsNullOrEmpty(Model.Id)) {
        ViewData["Title"] = "Metrics";
        ViewData["MetaTitle"] = "Fictional Universe Taxonomy Research - All Metrics";
        ViewData["MetaDescription"] = "Metrics include: " + string.Join("^, ", Model.List.Where(x => x.Tags.Contains("index")).OrderBy(x => x.Order).Select(x => x.Title).ToArray());
        ViewData["MetaImage"] = "/images/cover.jpg";
        ViewData["MetaImageAlt"] = " Fictional Universe Taxonomy Research Project cover image";
    } else {
        ViewData["Title"] = "Metric " + Model.Item.Title;
        ViewData["MetaTitle"] = "Fictional Universe Taxonomy Research - Universe " + Model.Item.Title;
        ViewData["MetaDescription"] = Model.Item.Readme.Replace("\r", " ").Replace("\n", " ");
        ViewData["MetaImage"] = "/images/cover.jpg";
        ViewData["MetaImageAlt"] = " Fictional Universe Taxonomy Research Project cover image";
    }
}

@if (string.IsNullOrEmpty(Model.Id)) {
    <h1>Metrics</h1>
        @foreach (var metric in Model.List.OrderBy(x => x.Order)) {
            <div>
                <a asp-page="Metric" asp-route-id="@metric.SeoName">@metric.Title</a>
            </div>
        }
} else {
    <h1>@Model.Item.Title</h1>

    @await Html.PartialAsync("_BaseModelProperties", Model.Item)

    <div class="my-textblock">
        <div><span>Type</span>: <span>@Model.Item.Type</span></div>
        <div><span>Unit</span>: <span>@Model.Item.Unit</span></div>
        <div><span>Range</span>: <span>@Model.Item.Range</span></div>
    </div>

    @await Html.PartialAsync("_BaseModelReadme", Model.Item)
}
